<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MessagePushed.Host</name>
    </assembly>
    <members>
        <member name="P:MessagePushed.Host.BaseApiController.Logger">
            <summary>
            日记记录器
            </summary>
        </member>
        <member name="T:MessagePushed.Host.BaseController">
            <summary>
            如果不标记Route 则swagger生成不了
            </summary>
        </member>
        <member name="P:MessagePushed.Host.BaseController.Logger">
            <summary>
            日记记录器
            </summary>
        </member>
        <member name="T:MessagePushed.Host.Controllers.TaskController">
            <summary>
            
            </summary>
        </member>
        <member name="M:MessagePushed.Host.Controllers.TaskController.SendMsg(MessagePushed.Host.Models.WebSocketData)">
            <summary>
            消息推送
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:MessagePushed.Host.Filters.ActionFilter.OnActionExecutionAsync(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext,Microsoft.AspNetCore.Mvc.Filters.ActionExecutionDelegate)">
            <summary>
            ActionExecution
            </summary>
            <param name="context"></param>
            <param name="next"></param>
        </member>
        <member name="M:MessagePushed.Host.Filters.ActionFilter.WriteLog(StackExchange.Profiling.MiniProfiler)">
            <summary>
            sql跟踪
            </summary>
            <param name="profiler"></param>
        </member>
        <member name="T:MessagePushed.Host.Filters.AuthorizationFilter">
            <summary>
            登录、权限拦截器
            </summary>
        </member>
        <member name="T:MessagePushed.Host.Filters.AuthorizeAttribute">
            <summary>
            权限验证特性
            </summary>    
        </member>
        <member name="F:MessagePushed.Host.Filters.AuthorizeAttribute.Permissions">
            <summary>
            权限集合
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.ResultBase`1.IsSuccess">
            <summary>
            请求是否成功
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.ResultBase`1.IsUserErr">
            <summary>
            是否为用户友好异常
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.ResultBase`1.ErrorMsg">
            <summary>
            异常消息
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.ResultBase`1.ResultUrl">
            <summary>
            重定向地址
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.ResultBase`1.Data">
            <summary>
            请求结果
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.ResultBase`1.TrackId">
            <summary>
            请求跟踪id
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.UserModel.Code">
            <summary>
            工号
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.UserModel.Nickname">
            <summary>
            昵称
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.UserModel.FilePath">
            <summary>
            头像路径
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.UserModel.Permissions">
            <summary>
            当前登录用户的权限
            </summary>
        </member>
        <member name="T:MessagePushed.Host.Models.WebSocketData">
            <summary>
            认证判断
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.WebSocketData.Id">
            <summary>
            主键标识
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.WebSocketData.IsAll">
            <summary>
            所以通知了浏览器的所有Tab标签，否则只通知独立浏览器其中一个tab
            情况1：需要对所有打开浏览器的数据做修改
            情况2：只需要谈出一个消息框
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.WebSocketData.UserIds">
            <summary>
            接收者
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.WebSocketData.Data">
            <summary>
            发送的数据对象(发送到前端的数据)
            </summary>
        </member>
        <member name="T:MessagePushed.Host.Models.WebSocketModel">
            <summary>
            WebSocketModel
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.WebSocketModel.Id">
            <summary>
            主键标识
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.WebSocketModel.UserId">
            <summary>
            用户id
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.WebSocketModel.BeginTime">
            <summary>
            连接时间
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.WebSocketModel.WebSocket">
            <summary>
            WebSocket对象
            </summary>
        </member>
        <member name="P:MessagePushed.Host.Models.WebSocketModel.BrowserId">
            <summary>
            浏览器id(标识独立的浏览器，建议用guid)
            </summary>
        </member>
        <member name="T:MessagePushed.Host.SocketHandler">
            <summary>
            Socket处理
            </summary>
        </member>
        <member name="F:MessagePushed.Host.SocketHandler.socketList">
            <summary>
            连接集合
            </summary>
        </member>
        <member name="F:MessagePushed.Host.SocketHandler.BufferSize">
            <summary>
            缓冲区大小
            </summary>
        </member>
        <member name="F:MessagePushed.Host.SocketHandler.Logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:MessagePushed.Host.SocketHandler.Acceptor(Microsoft.AspNetCore.Http.HttpContext,System.Func{System.Threading.Tasks.Task})">
            <summary>
            接收请求，建立连接
            </summary>
            <param name="httpContext"></param>
            <param name="n"></param>
            <returns></returns>
        </member>
        <member name="M:MessagePushed.Host.SocketHandler.SendToWebSocketsAsync(MessagePushed.Host.Models.WebSocketData)">
            <summary>
            发送消息到所有人
            </summary>
            <returns></returns>
        </member>
        <member name="M:MessagePushed.Host.SocketHandler.ArraySegmentToStringAsync(System.ArraySegment{System.Byte})">
            <summary>
            转字符串
            </summary>
            <param name="arraySegment"></param>
            <returns></returns>
        </member>
        <member name="M:MessagePushed.Host.SocketHandler.Map(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            请求
            </summary>
            <param name="app"></param>
        </member>
        <member name="T:MessagePushed.Host.Startup">
            <summary>
            模版来源：
            https://github.com/zhaopeiym/Boilerplate/issues
            </summary>
        </member>
        <member name="M:MessagePushed.Host.Startup.InitContainerBuilder(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            初始化 注入容器
            </summary>
        </member>
        <member name="M:MessagePushed.Host.Startup.LogConfig">
            <summary>
            日志配置
            </summary>      
        </member>
    </members>
</doc>
